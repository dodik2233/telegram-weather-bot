import asyncio
import httpx
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from dotenv import load_dotenv

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env ---
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENWEATHER_API_KEY = os.getenv("OPENWEATHER_API_KEY")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()
logging.basicConfig(level=logging.INFO)

# --- –§—É–Ω–∫—Ü–∏–∏ ---
async def get_weather(city: str) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–≥–æ–¥—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞."""
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY}&units=metric&lang=ru"
    async with httpx.AsyncClient() as client:
        try:
            response = await client.get(url)
            response.raise_for_status()
            data = response.json()

            weather_description = data.get('weather', [{}])[0].get('description', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')
            temp = data.get('main', {}).get('temp', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')
            feels_like = data.get('main', {}).get('feels_like', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')
            humidity = data.get('main', {}).get('humidity', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')
            wind_speed = data.get('wind', {}).get('speed', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')

            return (
                f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city.capitalize()}:\n"
                f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
                f"üå¨Ô∏è –í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                f"‚òÅÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {weather_description.capitalize()}"
            )
        except httpx.HTTPStatusError:
            return f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≥–æ—Ä–æ–¥ '{city}'. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API –ø–æ–≥–æ–¥—ã: {e}")
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ."

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
@dp.message(CommandStart())
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! üëã\n–Ø –±–æ—Ç –¥–ª—è –ø–æ–≥–æ–¥—ã. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")

@dp.message()
async def send_weather_info(message: types.Message):
    city = message.text
    weather_report = await get_weather(city)
    await message.answer(weather_report)

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
